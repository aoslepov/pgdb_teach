scope: pgteachcluster # должно быть одинаковым на всех нодах
namespace: /cluster/ # должно быть одинаковым на всех нодах
name: {{ansible_hostname}} # должно быть разным на всех нодах

restapi:
    listen: {{ ansible_default_ipv4.address }}:8008 # адрес той ноды, в которой находится этот файл
    connect_address: {{ ansible_default_ipv4.address }}:8008 # адрес той ноды, в которой находится этот файл

consul:
    hosts: 127.0.0.1:8301

# this section (bootstrap) will be written into Etcd:/<namespace>/<scope>/config after initializing new cluster
# and all other cluster members will use it as a `global configuration`
bootstrap:
    dcs:
        ttl: 100
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true
            use_slots: true
            parameters:
                    wal_level: replica
                    hot_standby: "on"
                    wal_keep_segments: 5120
                    max_wal_senders: 5
                    max_replication_slots: 5
                    checkpoint_timeout: 30

    initdb:
    - encoding: UTF8
    - data-checksums
    - locale: en_US.UTF8
    # init pg_hba.conf должен содержать адреса ВСЕХ машин, используемых в кластере
    pg_hba:
    - host replication postgres 127.0.0.1/8 scram-sha-256
    - host replication postgres 10.128.0.0/24 scram-sha-256
    - host replication repl 127.0.0.1/8 scram-sha-256
    - host replication repl 10.128.0.0/24 scram-sha-256
    - host all all 0.0.0.0/0 scram-sha-256

    users:
        admin:
            password: {{postgres_admin}}
            options:
                - createrole
                - createdb

postgresql:
    listen: {{ ansible_default_ipv4.address }}:5432 # адрес той ноды, в которой находится этот файл
    connect_address: {{ ansible_default_ipv4.address }}:5432 # адрес той ноды, в которой находится этот файл
    data_dir: /var/lib/postgresql/data/patroni # эту директорию создаст скрипт, описанный выше и установит нужные права
    bin_dir:  /usr/lib/postgresql/15/bin # укажите путь до вашей директории с postgresql
    pgpass: /tmp/pgpass
    authentication:
        replication:
            username: repl
            password: {{postgres_repl}}
        superuser:
            username: postgres
            password: {{postgres_super}}
    create_replica_methods:
        basebackup:
            checkpoint: 'fast'
    parameters:
        unix_socket_directories: '.'
        max_connections: '100'
	random_page_cost: '1.1'
        effective_io_concurrency: 200
        max_worker_processes: {{ ansible_processor_cores }}
        max_parallel_maintenance_workers: {{ ansible_processor_cores/2  }}
        max_parallel_workers_per_gather: {{ ansible_processor_cores }}
        max_parallel_workers: {{ ansible_processor_cores }}
        effective_cache_size: '{{ ansible_memory_mb.real.total * 0.8 }}MB'
        maintenance_work_mem: '{{ ansible_memory_mb.real.total * 0.05 }}MB'
        shared_buffers: '{{ ansible_memory_mb.real.total/4 | round }}MB'
        checkpoint_completion_target: '0.9'
        wal_buffers: '16MB'
        work_mem: '{{ ((ansible_memory_mb.real.total*0.8)-(ansible_memory_mb.real.total/4))/100 | round }}MB'
        min_wal_size: '1GB'
        max_wal_size: '4GB'
        shared_preload_libraries: 'pg_stat_statements'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
