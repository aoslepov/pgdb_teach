

- debug: msg="{{ hostvars[item]["ansible_default_ipv4"]["address"] }}     {{ hostvars[item]["ansible_hostname"]}}"
  with_items:  '{{ groups["pg_consul"] }}'
  when: consul_srv_config is defined


# для серверного конфига прописываем в хосты ноды консула если определена переменная consul_srv_config для хоста
- name: hosts | add consul internal ips
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/hosts
    regexp: '{{ hostvars[item]["ansible_default_ipv4"]["address"] }}     {{ hostvars[item]["ansible_hostname"]}}'
    line: '{{ hostvars[item]["ansible_default_ipv4"]["address"] }}     {{ hostvars[item]["ansible_hostname"]}}'
    create: yes
  with_items:  '{{ groups["pg_consul"] }}'
  when: consul_srv_config is defined


#создаём группу для консула
- name: create group consul
  ansible.builtin.group:
    name: consul
    state: present

#создаём юзера для консула
- name: create consul users
  ansible.builtin.user:
    name: consul
    shell: /bin/false
    groups: consul
    append: no
    password: "$y$j9T$lXUEtuHIWUMKoYt6JebHT1$zikw9hpSqtZNM.RIYl5Sa..mySiVKjsxNMUCFdpL3z0"
    update_password: always
    create_home: no

#создаём директории для ПО
- name: create consul dirs
  ansible.builtin.file:
    path: "{{item}}"
    state: directory
    owner: consul
    group: consul
  loop:
   - "/var/consul"
   - "/etc/consul.d"
   - "/etc/consul.d/scripts"


#загружаем консул с зеркала yandex 
- name: download consul
  ansible.builtin.shell:
    cmd: sudo wget -qO- https://hashicorp-releases.yandexcloud.net/consul/1.16.0/consul_1.16.0_linux_amd64.zip | gunzip - > /usr/local/bin/consul
  ignore_errors: yes

- name: consul permissions
  ansible.builtin.file:
    path: /usr/local/bin/consul
    owner: consul
    group: consul
    mode: '0774'

#копируем клиентский конфиг консула
- name: consul templating configs
  ansible.builtin.template:
    src: 'consul.json'
    dest: '/etc/consul.d/consul.json'
    owner: consul
    group: consul

#копируем серверный конфиг консула если определена переменная consul_srv_config для хоста
- name: consul templating config server
  ansible.builtin.template:
    src: 'consul_server.json'
    dest: '/etc/consul.d/consul_server.json'
    owner: consul
    group: consul
  when: consul_srv_config is defined

#копируем файл сервиса
- name: consul templating service
  template:
    src: "consul.service"
    dest: "/etc/systemd/system/consul.service"

#перегружаем конфигурацию systemd и ставим режим enabled
- name: consul enable and start service
  systemd: name="consul" daemon_reload=yes enabled=yes



# валидируем конфиг консула
- name: consul validate config
  ansible.builtin.shell:
    cmd: "consul validate /etc/consul.d"

# запускаем сервис
- name: consul start
  ansible.builtin.service:
    name: consul
    state: restarted
